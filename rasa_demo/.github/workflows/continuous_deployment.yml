name: Continuous Deployment
on:
  push: 
    branches:
    - 'main'

env:
  # These values are viewable in the Sara K8s CI entry of 1password
  # If updating secrets please also update the 1password entries
  GCLOUD_ZONE_ID: ${{ secrets.GCLOUD_ZONE_ID }}
  GCLOUD_CLUSTER_NAME: ${{ secrets.GCLOUD_CLUSTER_NAME }}
  GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  RASA_X_IMAGE_NAME: ${{ secrets.RASA_X_IMAGE_NAME }}
  ACTION_SERVER_IMAGE_NAME: ${{ secrets.ACTION_SERVER_IMAGE_NAME }}
  RASA_X_DOMAIN: ${{ secrets.RASA_X_DOMAIN }}
  SARA_GKE_SERVICE_ACCOUNT_NAME: ${{ secrets.SARA_GKE_SERVICE_ACCOUNT_NAME }}
  RASA_X_DATABASE_PASSWORD: ${{ secrets.RASA_X_DATABASE_PASSWORD }}
  RASA_X_PASSWORD: ${{ secrets.RASA_X_PASSWORD }}
  RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  RASA_TOKEN: ${{ secrets.RASA_TOKEN }}
  RASA_X_TOKEN: ${{ secrets.RASA_X_TOKEN }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  PASSWORDSALT: ${{ secrets.PASSWORDSALT }}
  STATIC_IP: ${{ secrets.STATIC_IP }}
  INGRESS_CERTIFICATE: ${{ secrets.INGRESS_CERTIFICATE }}
  STORAGE_BUCKET_URL: ${{ secrets.STORAGE_BUCKET_URL }}
  ACTION_SERVER_SECRET_NAME: ${{ secrets.ACTION_SERVER_SECRET_NAME }}

  NAMESPACE: "sara"
  RASA_X_USERNAME: "ci_user"
  RELEASE_NAME: "rasa-x"
  # NB! The rasa/rasa-x versions should be in sync with:
  # * rasa version in requirements.txt
  # * rasa-sdk base image version in Dockerfile
  RASA_X_VERSION: "0.40.1"
  RASA_VERSION: "2.6.3"
  # Due to the issue with openssl library for Google Cloud SDK (gcloud)
  # (https://github.com/GoogleCloudPlatform/github-actions/issues/128)
  # we use 297.0.01 version
  GCLOUD_VERSION: "297.0.1"

jobs:
  check_changed_files:
    # check change_filters.yml for filter details
    name: Check for file changes
    runs-on: ubuntu-20.04
    outputs:
      nlu: ${{ steps.changed-files.outputs.nlu }}
      core: ${{ steps.changed-files.outputs.core }}
      training: ${{ steps.changed-files.outputs.training }}
      actions: ${{ steps.changed-files.outputs.actions }}
      deployment: ${{ steps.changed-files.outputs.deployment }}

    steps:
      - uses: actions/checkout@v2
      - uses: RasaHQ/pr-changed-files-filter@c4f7116a04b8a4596313469429e2ad235f59d9c4
        id: changed-files
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: .github/change_filters.yml
          base: ${{ github.ref }}
  build-push-action-server:
    name: Build Action Server Docker Image
    needs: 
    - check_changed_files
    runs-on: ubuntu-latest
    if:  ${{ needs.check_changed_files.outputs.actions == 'true' }}
    steps:
      - name: Checkout git repository üïù
        uses: actions/checkout@v2

      - name: Authenticate into Google Cloud Platform
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '275.0.0'
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Configure Docker to use Google Cloud Platform ‚òÅÔ∏è
        run: |
          gcloud auth configure-docker

      - name: Pull Latest Image
        run: |
          docker pull gcr.io/replicated-test/rasa-demo:latest || true

      - name: Set Build ID from run ID and number
        run: echo "BUILD_NUMBER=$GITHUB_RUN_NUMBER-$GITHUB_RUN_ID" >> $GITHUB_ENV

      - name: Build Image
        run: |
          docker build -t gcr.io/replicated-test/rasa-demo:run$BUILD_NUMBER -t gcr.io/replicated-test/rasa-demo:latest --cache-from gcr.io/replicated-test/rasa-demo:latest .
      
      - name: Push PR Image to Google Cloud Container Registry
        run: |
          docker push gcr.io/replicated-test/rasa-demo:latest
          docker push gcr.io/replicated-test/rasa-demo:run$BUILD_NUMBER 

  deploy_to_k8s_cluster:
    name: Rasa Enterprise K8s deployment
    runs-on: ubuntu-20.04
    needs: 
    - check_changed_files
    - build-push-action-server
    if:  ${{ needs.check_changed_files.outputs.deployment == 'true' }}
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}
    - name: Checkout git repository üïù
      uses: actions/checkout@v2

    - name: Install Helm and helmfile ‚õë
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

        sudo curl -fsSL https://github.com/roboll/helmfile/releases/download/v0.130.0/helmfile_linux_amd64 --output /usr/local/bin/helmfile
        sudo chmod +x /usr/local/bin/helmfile

    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@e23988b2af9696c66e87d1efbc688d3a80c3be14
      name: Authenticate with gcloud üé´
      with:
        version: "${{ env.GCLOUD_VERSION }}"
        service_account_email: ${{ env.SARA_GKE_SERVICE_ACCOUNT_NAME }}
        service_account_key: ${{ secrets.SARA_GKE_SERVICE_ACCOUNT_KEY }}

    - name: Authenticate docker and configure cluster credentials üé´
      run: |
        # Set up docker to authenticate via gcloud command-line tool.
        gcloud  --quiet auth configure-docker
        gcloud container clusters get-credentials "$GCLOUD_CLUSTER_NAME" --project ${GCLOUD_PROJECT_ID} --zone "$GCLOUD_ZONE_ID"

    - name: Prepare namespace
      run: |
        kubectl config set-context --current --namespace="${NAMESPACE}"

    - name: Set action server tag to existing
      # If the action server image was updated, the tag should be updated to run${{ env.BUILD_NUMBER }},
      # otherwise it should be kept as the exisitng tag 
      if:  ${{ needs.check_changed_files.outputs.actions == 'false' }}
      run: |
        tag=`helm get values --output json $RELEASE_NAME | jq .app.tag`
        echo $tag
        echo "ACTION_SERVER_TAG='${tag}'" >> $GITHUB_ENV

    - name: Update action server tag if actions changed
      # If the action server image was updated, the tag should be updated to run${{ env.BUILD_NUMBER }},
      # otherwise it should be kept as the exisitng tag 
      if:  ${{ needs.check_changed_files.outputs.actions == 'true' }}
      run: |
        tag=run$GITHUB_RUN_NUMBER-$GITHUB_RUN_ID
        echo $tag
        echo "ACTION_SERVER_TAG='$tag'" >> $GITHUB_ENV

    - name: Deploy Rasa X chart ‚ò∏Ô∏è
      run: |
        cd ${{ github.workspace }}/.github/deployments && 
        helmfile repos &&
        helmfile sync

    - name: Wait for deployment to be ready ‚è∞
      timeout-minutes: 15
      run: |
        kubectl wait \
          --for=condition=available \
          --timeout=600s \
          -l "app.kubernetes.io/component=rasa-x" deployment

        # Wait for DB migration to be done
        until [[ $(curl -s "https://${{ env.RASA_X_DOMAIN }}/api/health" | tee /tmp/output_status.txt | jq -r .database_migration.status) -eq "completed" ]]
        do
          cat /tmp/output_status.txt || true
          sleep 5
        done
        # Wait for deployment to be ready
        until [[ $(curl -s https://${{ env.RASA_X_DOMAIN }}/api/health | tee /tmp/output_health.txt | jq -r .production.status) -eq 200 ]]
        do
          cat /tmp/output_health.txt || true
          sleep 5
        done

  train-upload-model:
    name: Train and Upload Model to Rasa X
    runs-on: ubuntu-latest
    needs: 
    - check_changed_files
    - deploy_to_k8s_cluster
    if: ${{ needs.check_changed_files.outputs.training == 'true' }}
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
          python -m pip install --upgrade "pip<20"
          pip install -r requirements-dev.txt
    - name: Train Model
      working-directory: ${{ github.workspace }}
      run: |
          rasa train
    - name: Set model name from Rasa version
      run: |
          python -c "import rasa; open('rasaversion.txt','w+').write(rasa.__version__)"
          rasa_version=`cat rasaversion.txt`
          model_path=`ls models/*.tar.gz | head -n 1`
          model_timestamp=$(basename "$model_path" .tar.gz)
          model_name="$model_timestamp"_rasa"$rasa_version"
          renamed_model_path=models/"$model_name".tar.gz
          mv $model_path $renamed_model_path
          echo "MODEL_NAME=${model_name}" >> $GITHUB_ENV
          echo "MODEL_PATH=${renamed_model_path}" >> $GITHUB_ENV

    - uses: google-github-actions/setup-gcloud@master
      name: Authenticate with gcloud üé´
      with:
        version: "${{ env.GCLOUD_VERSION }}"
        service_account_email: ${{ env.SARA_GKE_SERVICE_ACCOUNT_NAME }}
        service_account_key: ${{ secrets.SARA_GKE_SERVICE_ACCOUNT_KEY }}

    - name: Upload model to storage bucket
      run: |
          gsutil cp "${MODEL_PATH}" ${STORAGE_BUCKET_URL}/rasa_demo_models

    - name: Upload model to Rasa X
      working-directory: ${{ github.workspace }}
      run: |
           auth_token=$(curl --request POST \
              --url https://${RASA_X_DOMAIN}/api/auth \
              --header 'Content-Type: application/json' \
              --data "{
              \"username\": \"${RASA_X_USERNAME}\",
              \"password\": \"${RASA_X_PASSWORD}\"
            }" | jq -r '.access_token')

            echo "AUTH_TOKEN=${auth_token}" >> $GITHUB_ENV

            curl -k -F "model=@${MODEL_PATH}" \
              --url https://$RASA_X_DOMAIN/api/projects/default/models \
              --header "Authorization: Bearer ${auth_token}"

    - name: Tag model as production
      working-directory: ${{ github.workspace }}
      run: |
            curl -X PUT  \
            --url https://$RASA_X_DOMAIN/api/projects/default/models/$MODEL_NAME/tags/production \
            --header "Authorization: Bearer ${AUTH_TOKEN}"
